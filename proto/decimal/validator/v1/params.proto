syntax = "proto3";
package decimal.validator.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

import "cosmos_proto/cosmos.proto";

option go_package = "bitbucket.org/decimalteam/go-smart-node/x/validator/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = true;

  // unbonding_time is the time duration of unbonding.
  google.protobuf.Duration unbonding_time = 1 [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true ];
  // max_validators is the maximum number of validators.
  uint32 max_validators = 2;
  // max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio).
  uint32 max_entries = 3;
  // historical_entries is the number of historical entries to persist.
  uint32 historical_entries = 4;
  // max_delegations is the maximum number of delegations per validator.
  uint32 max_delegations = 5;
  // min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators.
  string min_commission_rate = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
  // bond_denom defines the bondable coin denomination.
  string bond_denom = 7;
}
